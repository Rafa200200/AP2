library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
install.packages("tidyverse")
install.packages("cluster")
install.packages("factoextra")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
install.packages("cluster")
install.packages("factoextra")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
# install.packages("devtools")
devtools::install_github("r-lib/conflicted")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
aggregate(USArrests, by=list(cluster=final$cluster), mean)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df
df <- na.omit(df)
df <- scale(df)
head(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2, nstart = 25)
str(k2)
k2
fviz_cluster(k2, data = df, main = "K2 Cluster Plot")
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
update.packages(ask = FALSE, checkBuilt = TRUE)
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "silhouette")
gap_stat <- clusGap(df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
final <- kmeans(df, 4, nstart = 25)
final
fviz_cluster(final, data = df)
aggregate(USArrests, by=list(cluster=final$cluster), mean)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
rm(list = ls())
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df
df <- na.omit(df)
df <- scale(df)
head(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2, nstart = 25)
str(k2)
k2
fviz_cluster(k2, data = df, main = "K2 Cluster Plot")
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
install.packages("gridExtra")
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
install.packages("tidyverse")
install.packages("cluster")
install.packages("factoextra")
install.packages("tidyverse")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
install.packages("htmltools")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages(c("tidyverse", "cluster", "factoextra"))
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df
df <- na.omit(df)
df <- scale(df)
head(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2, nstart = 25)
str(k2)
k2
fviz_cluster(k2, data = df, main = "K2 Cluster Plot")
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
update.packages(ask = FALSE, checkBuilt = TRUE)
grid.arrange(p1, p2, p3, p4, nrow = 2)
.libPaths("~/R/library")
.libPaths("D:\Program Files\RStudio\resources\Nova pasta")
.libPaths("D:\Program_Files\RStudio\resources\Nova_pasta")
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "silhouette")
gap_stat <- clusGap(df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
final <- kmeans(df, 4, nstart = 25)
final
fviz_cluster(final, data = df)
aggregate(USArrests, by=list(cluster=final$cluster), mean)
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
install.packages("htmltools", version = "0.5.7")
detach("package:htmltools", unload = TRUE)
detach("package:htmltools", character.only = TRUE)
search()
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(htmltools)
search()
install.packages(c("dplyr", "htmltools", "rlang", "stringi", "stringr", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "stringi", "stringr", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "stringi", "stringr", "vctrs", "xfun"))
install.packages(c("htmltools", "xfun"))
install.packages(c("htmltools", "xfun"))
install.packages(c("htmltools", "xfun"))
install.packages(c("htmltools", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
install.packages(c("dplyr", "htmltools", "rlang", "vctrs", "xfun"))
detach("package:dplyr", unload = TRUE)
# Set a CRAN mirror
chooseCRANmirror(graphics = FALSE)
install.packages(c("tidyverse", "cluster", "factoextra"))
update.packages(ask = FALSE)
# Set a CRAN mirror
chooseCRANmirror(graphics = FALSE)
chooseMirror(m, "CRAN", graphics, ind)
# Set a default CRAN mirror
options(repos = c(CRAN = "https://cran.rstudio.com/"))
# Install or update packages
install.packages(c("tidyverse", "cluster", "factoextra"))
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(htmltools)
df <- USArrests
df
df <- na.omit(df)
df <- scale(df)
head(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2, nstart = 25)
str(k2)
k2
fviz_cluster(k2, data = df, main = "K2 Cluster Plot")
k3 <- kmeans(df, centers = 3, nstart = 25)
k4 <- kmeans(df, centers = 4, nstart = 25)
k5 <- kmeans(df, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df, main = "k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df, main = "k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df, main = "k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df, main = "k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "silhouette")
gap_stat <- clusGap(df, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
final <- kmeans(df, 4, nstart = 25)
final
fviz_cluster(final, data = df)
aggregate(USArrests, by=list(cluster=final$cluster), mean)
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(htmltools)
update.packages(ask = FALSE, checkBuilt = TRUE)
